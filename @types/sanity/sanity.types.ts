/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Tag = {
  _id: string
  _type: 'tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  slug: Slug
  name: string
}

export type LinkList = {
  _id: string
  _type: 'linkList'
  _createdAt: string
  _updatedAt: string
  _rev: string
  id: Slug
  item: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'linkItem'
  }>
  contentfulArchived?: boolean
}

export type LinkItem = {
  _id: string
  _type: 'linkItem'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name: string
  href: string
  contentfulArchived?: boolean
}

export type GlobalSettings = {
  _id: string
  _type: 'globalSettings'
  _createdAt: string
  _updatedAt: string
  _rev: string
  siteName: string
  description?: string
  author: string
  authorUrl?: string
  copyright?: string
  donate?: string
  donateUrl?: string
  bio?: string
  contactUrl?: string
  useSidebar: boolean
  adblock: boolean
  showRelatedPosts: boolean
  showNewPosts: boolean
  recommendedPosts?: Array<string>
  avatar?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  topLogo?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  banner?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  favicon: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    media?: unknown
    _type: 'file'
  }
  appleTouchIcon: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  contentfulArchived?: boolean
}

export type MusicAlbum = {
  _id: string
  _type: 'musicAlbum'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  slug: Slug
  description?: string
  tracks?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'song'
  }>
  releaseDate?: string
  artist?: Array<string>
  credit?: Array<string>
  licenseSelect?:
    | 'CC0 1.0'
    | 'CC BY 4.0'
    | 'CC BY-SA 4.0'
    | 'CC BY-NC 4.0'
    | 'CC BY-NC-SA 4.0'
    | 'CC BY-ND 4.0'
    | 'CC BY-NC-ND 4.0'
  license: string
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
  contentfulArchived?: boolean
}

export type Song = {
  _id: string
  _type: 'song'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  artist: Array<string>
  releaseDate?: string
  slug: Slug
  credit?: Array<string>
  streamUrl?: string
  url?: Array<string>
  description?: string
  lyrics?: string
  licenseSelect?:
    | 'CC0 1.0'
    | 'CC BY 4.0'
    | 'CC BY-SA 4.0'
    | 'CC BY-NC 4.0'
    | 'CC BY-NC-SA 4.0'
    | 'CC BY-ND 4.0'
    | 'CC BY-NC-ND 4.0'
  license: string
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
  contentfulArchived?: boolean
}

export type PostList = {
  _id: string
  _type: 'postList'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  posts: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blogPost'
  }>
  description?: string
  slug: Slug
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
  contentfulArchived?: boolean
}

export type BlogPost = {
  _id: string
  _type: 'blogPost'
  _createdAt: string
  _updatedAt: string
  _rev: string
  documentTimestamps?: string
  title: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  slug: Slug
  showToc: boolean
  body: string
  licenseSelect?:
    | 'CC0 1.0'
    | 'CC BY 4.0'
    | 'CC BY-SA 4.0'
    | 'CC BY-NC 4.0'
    | 'CC BY-NC-SA 4.0'
    | 'CC BY-ND 4.0'
    | 'CC BY-NC-ND 4.0'
  license: string
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
  contentfulArchived?: boolean
}

export type Markdown = string

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slug = {
  _type: 'slug'
  current: string
  source?: string
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | Tag
  | LinkList
  | LinkItem
  | GlobalSettings
  | MusicAlbum
  | Song
  | PostList
  | BlogPost
  | Markdown
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol;
